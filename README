The TOLL code aims to implement the very large constant multiplications, which generally appear in cryptography. 
It takes very large constants written in a text file as an input and generates the design files describing the 
realization of these constant multiplications and the test-bench files, all in Verilog,  as outputs. It can 
realize the constant multiplications using generic multipliers, compressor trees, and adders/subtractors 
under the shift-adds architecture. In the shift-adds realizations it aims to maximize the sharing of 
partial products. It can also take into account the number of adder-steps of the realization while 
reducing the number of addition/subtraction operations.

More information can be found in its README file.
